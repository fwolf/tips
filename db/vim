%
* 读取光标处的字符串，并且移动光标到它再次出现的地方。
# 和上面的类似，但是是往反方向寻找。
%
frame 操作，一个屏幕显示多个文件
增加frame Ctrl+w n/Ctrl+n
减少frame Ctrl+w c/Ctrl+c
切换frame Ctrl+w Ctrl+w
交换两个frame的位置 Ctrl+w Ctrl+r
%
fx 移动光标到当前行的下一个 x 处。可以使用 ; 来重复你的上一个 f 命令。
tx 和上面的命令类似，但是是移动到 x 的左边一个位置。
Fx 和 fx 类似，不过是往回找。
w 光标往前移动一个词。
b 光标往后移动一个词。
0 移动光标到当前行首。
^ 移动光标到当前行的第一个字母位置。
$ 移动光标到行尾。
) 移动光标到下一个句子。
( 移动光标到上一个句子。
%
gg 移动光标到文件首
H 移动光标到屏幕上面
M 移动光标到屏幕中间
L 移动光标到屏幕下面
%
gg=G 对代码自动格式化
%
ma 在当前光标的位置标记一个书签，名字为 a。书签名只能是小写字母。你看不见书签的存在，但它确实已经在那里了。
`a 到书签 a 处。注意这个不是单引号，它一般位于大部分键盘的 1 的左边。
`. 到你上次编辑文件的地方。这个命令很有用，而且你不用自己去标记它。
%
UTF-8环境下如何正确识别和编辑gb2312编码的文件
    In vimrc, add "set fileencodings=utf-bom,utf-8,gb2312,default", done.
%
代码折叠功能
set foldmethod=indent
zo 	將游標所在處的折疊打開。open。
zc 	將游標所在處已打開的內容再度折疊起來。close。
zr 	將全文的所有折疊依層次通通打開。reduce。
zm 	將全文已打開的折疊依層次通通再折疊起來。more。
zR 	作用和 zr 同，但會打開含巢狀折疊（折疊中又還有折疊）的所有折疊。
zM 	作用和 zm 同，但對於巢狀折疊亦有作用。
zi 	這是個切換，是折疊與不折疊指令間的切換。
zn 	打開全文的所有折疊。fold none。
zN 	這是 zn 的相對指令，回復所有的折疊。
%
批量删除具有指定特征的行:
    :g/\.rar\|\.jpg/d (注意|要进行转义)
%
十六进制编辑（利用了 xxd 这个小工具）
    :%!xxd 进入十六进制编辑模式
    :%!xxd -r 退出十六进制编辑模式
%
搜索非8位字符?
    /[^\x00-\xff]
%
用 vim 写代码
]p 和 p 的功能差不多，但是它会自动调整被粘贴的文本的缩进去适应当前代码的位置。
% 匹配花括号、方括号、括号等。
>> 缩进所有选择的代码
<< 和上面类似，但是反缩进
gd 到达光标所在处函数或者变量的定义处。
K 在 Man 里面查找光标当前所在处的词。
%
